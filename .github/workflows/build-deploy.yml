name: Build and Deploy
on:
  push:
    branches:
      - "main"
      - "test"
      - "production"
      - "development"
  pull_request:
    branches:
      - "development"
      - "test"
      - "production"
      - "main"
jobs:
  job_1:
    environment:
      name: testing
    env:
      OAUTH2_SECRET_KEY: ${{secrets.OAUTH2_SECRET_KEY}}
      DB_USER_PASSW: ${{secrets.DB_USER_PASSW}}
      DB_NAME: ${{secrets.DB_NAME}}
      ACCESS_TOKEN_EXPIRE_WEEKS: ${{secrets.ACCESS_TOKEN_EXPIRE_WEEKS}}
      ALGORITHM: ${{secrets.ALGORITHM}}
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
          POSTGRES_DB: ${{secrets.DB_NAME}}_test
          POSTGRES_USER: ${{secrets.POSTGRES_USER}}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    runs-on: ubuntu-latest
    steps:
      - name: Pulling from git repo
        uses: actions/checkout@v2
      - name: Setup Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Update PIP
        run: python3 -m pip install --upgrade pip
      - name: Install Project Dependencies
        run: pip install -r requirements.txt
      - name: Install Pytest and Run Tests
        run: |
          pip install pytest
          pytest -v -s
      - name: Setting Up Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{secrets.DOCKER_USER_NAME}}
          password: ${{secrets.DOCKER_ACCESS_TOKEN}}
      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Build And Deploy
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: Dockerfile
          push: true
          tags: ${{secrets.DOCKER_USER_NAME}}/crud_fastapi:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Image Digest
        run: echo ${{steps.docker_build.outputs.digest}}